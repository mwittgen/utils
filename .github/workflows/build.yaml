name: build_and_test

on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v3
        with:
          # Need to clone everything to determine version from git.
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: 3.8
          channels: conda-forge,defaults
          channel-priority: strict
          show-channel-urls: true

      - name: Install eups and any other conda packages
        shell: bash -l {0}
        run: |
          conda install -y -q eups conda "pip<22"

      # We have two cores so we can speed up the testing with xdist
      - name: Install pytest packages
        shell: bash -l {0}
        run: conda install -y -q pytest pytest-flake8 pytest-xdist pytest-openfiles pytest-cov

      - name: Install numexpr for tests
        shell: bash -l {0}
        run: |
          conda install numexpr

      - name: Install dependencies
        shell: bash -l {0}
        run: |
          pip install -r requirements.txt

      - name: List installed packages
        shell: bash -l {0}
        run: |
          conda list
          pip list -v

      - name: Build and install
        shell: bash -l {0}
        run: pip install -v -e .

      - name: Setup EUPS test package
        shell: bash -l {0}
        run: |
          mkdir -p test_package/ups
          touch test_package/ups/test_package.table
          mkdir test_package/.git
          cp -r .git test_package/.git/

      - name: Run tests
        shell: bash -l {0}
        run: |
          cd test_package
          setup -k -r .
          cd -
          eups list
          pytest -r a -v -n 3 --open-files --cov=tests --cov=lsst.utils --cov-report=xml --cov-report=term

      - name: Upload coverage to codecov
        uses: codecov/codecov-action@v2
        with:
          file: ./coverage.xml

  pypi:
    needs: [build_and_test]
    if: startsWith(github.ref, 'refs/tags/')
    uses: mwittgen/rubin_workflows/.github/workflows/pypi.yaml@main
